[{"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/index.js":"1","/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/reportWebVitals.js":"2","/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/App.js":"3","/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/CustomEntryCard.js":"4"},{"size":524,"mtime":1610578075574,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610499765945,"results":"7","hashOfConfig":"6"},{"size":5121,"mtime":1611453838649,"results":"8","hashOfConfig":"6"},{"size":3440,"mtime":1611202779618,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1tvth9r",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/index.js",[],["21","22"],"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/reportWebVitals.js",[],"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/App.js",["23"],"import React, {Component} from 'react';\nimport './App.css';\n\nimport { Anchor, Nav, Button, Grommet, Header, Box, WorldMap, Main, Heading, Paragraph, Select, Layer } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport CustomEntryCard from './CustomEntryCard';\n\n\n\nclass App extends Component {\n  state = {\n    locationList: [],\n    locationSearchRes: [],\n    entry1: [],\n    entry2: [],\n    setShowResults: false,\n    result: [],\n    showCustomEntry: false\n  }\n\n  getResponse = async() => {\n    const response = await fetch('http://localhost:5000/locations');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  }\n\n  onCalculate = () => {\n    if(this.state.entry1.area && this.state.entry2.area){\n      var temp = this.state.entry2.area / this.state.entry1.area;\n      if(temp % 1 !== 0){\n        temp = Math.floor(temp);\n      }      \n    }\n    this.setState({ result: temp });\n    this.setState({ locationList: this.state.locationSearchRes });\n    this.setState({ showResults: true });\n  }\n\n  setShow = (x) => {\n    this.setState({showCustomEntry: x})\n  }\n\n  componentDidMount() {\n    this.getResponse()\n      .then(res => {\n        this.setState({ \n        locationList: res,\n        locationSearchRes: res });\n      })\n  }\n\n  render() {\n    const {locationList, locationSearchRes, entry1, entry2, result, showCustomEntry, showResults} = this.state;\n    // console.log(\"locationRes \" + locationSearchRes);\n    // const items = locationSearchRes.map((o => \n    //   ({...o})\n    // ));\n    // console.log(\"items \" + items);\n    // const items2 = locationSearchRes.slice();\n    // console.log(\"items2 \" + items2);\n    return (\n      <Grommet theme={grommet}>\n        <div className=\"App\">\n          <Header className=\"App-header\" pad=\"small\" align=\"center\">\n            <Nav direction=\"row\">\n              <Anchor label=\"Home\" href=\"#\" />\n              <Anchor label=\"Profile\" href=\"#\" />\n            </Nav>\n            <Box align=\"center\">\n              <Paragraph alignSelf=\"center\">Call out to API!</Paragraph>\n            </Box>\n          </Header>\n          \n          <Main pad=\"large\">\n            <div className=\"map-container\" style={{height: '50%'}}>\n              <Box direction=\"row-responsive\" align=\"center\">\n                <WorldMap color=\"graph-1\" margin=\"small\" align=\"center\"/>\n              </Box>\n            </div>\n            <Box>\n              <Heading>HMT</Heading>\n            </Box>\n            <Box direction=\"row\">\n              <div>\n                <Paragraph>How many times could</Paragraph>\n              </div>\n              <div>\n                <Select\n                  options={locationList}\n                  labelKey=\"name\"\n                  valueKey=\"area\"\n                  value={entry1.length < 1 ? locationList.find(o => o.name === 'Texas') : entry1}\n                  size=\"xsmall\"\n                  margin=\"small\"\n                  onSearch={(searchText) => {\n                    const regexp = new RegExp(searchText, 'i');\n                    this.setState({ locationList: locationList.filter(o => o.name.match(regexp)) });\n                  }}\n                  onChange={event => this.setState({\n                    entry1: event.value,\n                    locationList: locationSearchRes,\n                    showResults: false\n                  })}\n                />\n              </div>\n              <div>\n                <Paragraph>fit into</Paragraph>\n              </div>\n              <div>\n                <Select\n                  options={locationList}\n                  labelKey=\"name\"\n                  valueKey=\"area\"\n                  value={entry2}\n                  size=\"xsmall\"\n                  margin=\"small\"\n                  onSearch={(searchText) => {\n                    const regexp = new RegExp(searchText, 'i');\n                    this.setState({ locationList: locationList.filter(o => o.name.match(regexp)) });\n                  }}\n                  onChange={ev => this.setState({\n                    entry2: ev.value,\n                    locationList: locationSearchRes,\n                    showResults: false\n                  })}\n                />\n              </div>\n              \n              <Paragraph>?</Paragraph>\n              <Button primary margin=\"small\" size=\"small\" label=\"Calculate\" onClick={this.onCalculate} />\n              <Button primary margin=\"small\" size=\"small\" label=\"Custom Entry\" onClick={() => this.setShow(true)} />\n              {showCustomEntry ? \n                <Layer\n                    onEsc={() => this.setShow(false)}\n                    onClickOutside={() => this.setShow(false)}\n                >\n                    <CustomEntryCard> </CustomEntryCard>\n                  </Layer>\n                  : null\n                }\n            </Box>\n            <Box>\n              { this.state.showResults ? \n                <Heading>{entry1} could fit into {entry2} {result} times!</Heading>\n              : null }\n            </Box>\n          </Main>\n        </div>\n      </Grommet>\n    );\n  }\n}\n\nexport default App;\n","/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/CustomEntryCard.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":55,"column":86,"nodeType":"32","messageId":"33","endLine":55,"endColumn":97},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'showResults' is assigned a value but never used.","Identifier","unusedVar",["36"],["37"],"no-global-assign","no-unsafe-negation"]