{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/CustomEntryCard.js\";\nimport React, { Component } from 'react';\nimport { Layer, Card, CardBody, CardFooter, CardHeader, Button, Form, FormField, TextInput, Box } from 'grommet';\n\nclass CustomEntryCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: {\n        id: '',\n        name: '',\n        area: '',\n        type: '',\n        continent: ''\n      }\n    };\n\n    this.setValue = value => {\n      this.setState({\n        value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(this.state);\n      fetch('http://localhost:5000/locations', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.value.id,\n          name: this.value.name,\n          area: this.value.area,\n          type: this.value.type,\n          continent: this.value.continent\n        })\n      });\n    };\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      height: \"medium\",\n      align: \"center\",\n      width: \"large\",\n      background: \"light-1\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        background: \"light-3\",\n        pad: \"medium\",\n        children: \"Custom Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        pad: \"medium\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          value: value,\n          onChange: nextValue => this.setValue(nextValue),\n          onReset: () => this.setValue({}),\n          onSubmit: this.submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            direction: \"row\",\n            gap: \"medium\",\n            children: [/*#__PURE__*/_jsxDEV(FormField, {\n              name: \"id\",\n              htmlFor: \"id-input\",\n              label: \"ID\",\n              children: /*#__PURE__*/_jsxDEV(TextInput, {\n                id: \"id-input-id\",\n                name: \"id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"name\",\n              htmlFor: \"name-input\",\n              label: \"Name\",\n              children: /*#__PURE__*/_jsxDEV(TextInput, {\n                id: \"name-input-id\",\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"area\",\n              htmlFor: \"area-input\",\n              label: \"Area (in square mi.)\",\n              children: /*#__PURE__*/_jsxDEV(TextInput, {\n                id: \"area-input-id\",\n                name: \"area\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            direction: \"row\",\n            gap: \"medium\",\n            children: [/*#__PURE__*/_jsxDEV(FormField, {\n              name: \"type\",\n              htmlFor: \"type-input\",\n              label: \"Type (state or country)\",\n              children: /*#__PURE__*/_jsxDEV(TextInput, {\n                id: \"type-input-id\",\n                name: \"type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(FormField, {\n              name: \"continent\",\n              htmlFor: \"continent-input\",\n              label: \"Continent\",\n              children: /*#__PURE__*/_jsxDEV(TextInput, {\n                id: \"continent-input-id\",\n                name: \"continent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            direction: \"row\",\n            align: \"center\",\n            gap: \"medium\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              primary: true,\n              label: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"reset\",\n              label: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n        pad: {\n          horizontal: \"small\"\n        },\n        background: \"light-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CustomEntryCard;","map":{"version":3,"sources":["/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/CustomEntryCard.js"],"names":["React","Component","Layer","Card","CardBody","CardFooter","CardHeader","Button","Form","FormField","TextInput","Box","CustomEntryCard","state","value","id","name","area","type","continent","setValue","setState","submitHandler","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","changeHandler","target","render","nextValue","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Layer, Card, CardBody, CardFooter, CardHeader, Button, Form, FormField, TextInput, Box } from 'grommet';\n\n\n class CustomEntryCard extends Component {\n    state = { \n        value: {\n            id: '',\n            name: '',\n            area: '',\n            type: '',\n            continent: ''\n        }\n\n    }\n\n    setValue = (value) => {\n        this.setState({value});\n    }\n\n    submitHandler = e => {\n        e.preventDefault();\n        console.log(this.state);\n        fetch('http://localhost:5000/locations', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                id: this.value.id,\n                name: this.value.name,\n                area: this.value.area,\n                type: this.value.type,\n                continent: this.value.continent,\n            })\n        })\n    }\n\n    changeHandler = e => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n    const { value } = this.state;\n    return (\n        <Card  height=\"medium\" align=\"center\" width=\"large\" background=\"light-1\">\n            <CardHeader background=\"light-3\" pad=\"medium\">Custom Entry</CardHeader>\n            <CardBody pad=\"medium\">\n                <Form\n                    value={value}\n                    onChange={nextValue => this.setValue(nextValue)}\n                    onReset={() => this.setValue({})}\n                    onSubmit={this.submitHandler}\n                >\n                    <Box direction=\"row\" gap=\"medium\">\n                    <FormField name=\"id\" htmlFor=\"id-input\" label=\"ID\">\n                        <TextInput id=\"id-input-id\" name=\"id\"  />\n                    </FormField> \n                    <FormField name=\"name\" htmlFor=\"name-input\" label=\"Name\">\n                        <TextInput id=\"name-input-id\" name=\"name\" />\n                    </FormField> \n                    <FormField name=\"area\" htmlFor=\"area-input\" label=\"Area (in square mi.)\">\n                        <TextInput id=\"area-input-id\" name=\"area\" />\n                    </FormField>\n                    </Box>\n\n                    <Box direction=\"row\" gap=\"medium\">\n                    <FormField name=\"type\" htmlFor=\"type-input\" label=\"Type (state or country)\">\n                        <TextInput id=\"type-input-id\" name=\"type\" />\n                    </FormField>\n                    <FormField name=\"continent\" htmlFor=\"continent-input\" label=\"Continent\">\n                        <TextInput id=\"continent-input-id\" name=\"continent\" />\n                    </FormField>\n                    </Box>\n\n                    <Box direction=\"row\" align=\"center\" gap=\"medium\">\n                        <Button type=\"submit\" primary label=\"Submit\" />\n                        <Button type=\"reset\" label=\"Reset\" />\n                    </Box>\n                </Form>\n            </CardBody>\n            <CardFooter pad={{horizontal: \"small\"}} background=\"light-2\">   \n            </CardFooter>\n        </Card>\n    );\n    }\n}\n\nexport default CustomEntryCard;"]},"metadata":{},"sourceType":"module"}