{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Anchor, Nav, Button, Grommet, Header, Box, WorldMap, Main, Heading, Paragraph, Select, Layer, RadioButtonGroup } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport CustomEntryCard from './CustomEntryCard';\nimport ResultsCard from './ResultsCard';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      locationList: [],\n      locationSearchRes: [],\n      entry1: [],\n      entry2: [],\n      setShowResults: false,\n      result: [],\n      showCustomEntry: false,\n      decimalBlurb: false,\n      radioVal: 'mi'\n    };\n\n    this.getResponse = async () => {\n      const response = await fetch('http://localhost:5000/locations');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.onCalculate = () => {\n      if (this.state.entry1.area && this.state.entry2.area) {\n        var temp = this.state.entry2.area / this.state.entry1.area;\n\n        if (temp % 1 !== 0) {\n          this.setState({\n            decimalBlurb: true\n          });\n        }\n      }\n\n      this.setState({\n        result: temp,\n        locationList: this.state.locationSearchRes,\n        showResults: true\n      });\n    };\n\n    this.setShow = x => {\n      this.setState({\n        showCustomEntry: x\n      });\n    };\n\n    this.setRadioValue = value => {\n      this.setState({\n        radioVal: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getResponse().then(res => {\n      this.setState({\n        locationList: res,\n        locationSearchRes: res\n      });\n    });\n  }\n\n  render() {\n    const {\n      locationList,\n      locationSearchRes,\n      entry1,\n      entry2,\n      result,\n      radioVal,\n      showCustomEntry,\n      showResults,\n      decimalBlurb\n    } = this.state;\n    const texas = locationList.find(o => o.name === 'Texas');\n    console.log(texas);\n    return /*#__PURE__*/_jsxDEV(Grommet, {\n      theme: grommet,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: \"App-header\",\n          pad: \"small\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Anchor, {\n              label: \"Home\",\n              href: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Anchor, {\n              label: \"Locations\",\n              href: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Heading, {\n              direction: \"row\",\n              children: \"HMT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          pad: \"large\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            style: {\n              height: '50%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              direction: \"row-responsive\",\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(WorldMap, {\n                color: \"graph-1\",\n                margin: \"small\",\n                align: \"center\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Paragraph, {\n                children: \"How many times could\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: locationList,\n                labelKey: \"name\",\n                valueKey: \"area\",\n                value: entry1.length < 1 ? texas : entry1,\n                size: \"xsmall\",\n                margin: \"small\",\n                onSearch: searchText => {\n                  const regexp = new RegExp(searchText, 'i');\n                  this.setState({\n                    locationList: locationList.filter(o => o.name.match(regexp))\n                  });\n                },\n                onChange: event => this.setState({\n                  entry1: event.value,\n                  locationList: locationSearchRes,\n                  showResults: false,\n                  decimalBlurb: false\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Paragraph, {\n                children: \"fit into\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: locationList,\n                labelKey: \"name\",\n                valueKey: \"area\",\n                value: entry2,\n                size: \"xsmall\",\n                margin: \"small\",\n                onSearch: searchText => {\n                  const regexp = new RegExp(searchText, 'i');\n                  this.setState({\n                    locationList: locationList.filter(o => o.name.match(regexp))\n                  });\n                },\n                onChange: ev => this.setState({\n                  entry2: ev.value,\n                  locationList: locationSearchRes,\n                  showResults: false,\n                  decimalBlurb: false\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              margin: \"small\",\n              size: \"small\",\n              label: \"Calculate\",\n              onClick: this.onCalculate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              margin: \"small\",\n              size: \"small\",\n              label: \"Custom Entry\",\n              onClick: () => this.setShow(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), showCustomEntry ? /*#__PURE__*/_jsxDEV(Layer, {\n              onEsc: () => this.setShow(false),\n              onClickOutside: () => this.setShow(false),\n              children: /*#__PURE__*/_jsxDEV(CustomEntryCard, {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioButtonGroup, {\n            direction: \"row\",\n            align: \"center\",\n            name: \"doc\",\n            options: ['mi', 'km'],\n            value: radioVal,\n            onChange: event => this.setRadioValue(event.target.defaultValue)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), showResults ?\n          /*#__PURE__*/\n          //<Heading background=\"neutral\"> {entry1.name} could fit into {entry2.name} {Math.floor(result)} times!</Heading>\n          _jsxDEV(ResultsCard, {\n            entry1: entry1,\n            entry2: entry2,\n            result: result,\n            decimalBlurb: decimalBlurb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/App.js"],"names":["React","Component","Anchor","Nav","Button","Grommet","Header","Box","WorldMap","Main","Heading","Paragraph","Select","Layer","RadioButtonGroup","grommet","CustomEntryCard","ResultsCard","App","state","locationList","locationSearchRes","entry1","entry2","setShowResults","result","showCustomEntry","decimalBlurb","radioVal","getResponse","response","fetch","body","json","status","Error","message","onCalculate","area","temp","setState","showResults","setShow","x","setRadioValue","value","componentDidMount","then","res","render","texas","find","o","name","console","log","height","length","searchText","regexp","RegExp","filter","match","event","ev","target","defaultValue"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nimport { Anchor, Nav, Button, Grommet, Header, Box, WorldMap, Main, Heading, Paragraph, Select, Layer, RadioButtonGroup } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport CustomEntryCard from './CustomEntryCard';\nimport ResultsCard from './ResultsCard';\n\n\n\nclass App extends Component {\n  state = {\n    locationList: [],\n    locationSearchRes: [],\n    entry1: [],\n    entry2: [],\n    setShowResults: false,\n    result: [],\n    showCustomEntry: false,\n    decimalBlurb: false,\n    radioVal: 'mi'\n  }\n\n  getResponse = async() => {\n    const response = await fetch('http://localhost:5000/locations');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  }\n\n  onCalculate = () => {\n    if(this.state.entry1.area && this.state.entry2.area){\n      var temp = this.state.entry2.area / this.state.entry1.area;\n      if(temp % 1 !== 0){\n        this.setState({decimalBlurb: true});\n      }      \n    }\n    this.setState({ result: temp,\n      locationList: this.state.locationSearchRes,\n      showResults: true });\n  }\n\n  setShow = (x) => {\n    this.setState({showCustomEntry: x})\n  }\n\n  setRadioValue = (value) => {\n    this.setState({radioVal: value});\n  }\n\n  componentDidMount() {\n    this.getResponse()\n      .then(res => {\n        this.setState({ \n        locationList: res,\n        locationSearchRes: res\n        });\n      })\n  }\n\n  render() {\n    const {locationList, locationSearchRes, entry1, entry2, result, radioVal, showCustomEntry, showResults, decimalBlurb} = this.state;\n    const texas = locationList.find(o => o.name === 'Texas');\n    console.log(texas)\n    return (\n      <Grommet theme={grommet}>\n        <div className=\"App\">\n          <Header className=\"App-header\" pad=\"small\" align=\"center\">\n            <Nav direction=\"row\">\n              <Anchor label=\"Home\" href=\"#\" />\n              <Anchor label=\"Locations\" href=\"#\" />\n            </Nav>\n            <Box>\n              <Heading direction=\"row\">HMT</Heading>\n            </Box>\n          </Header>\n          \n          <Main pad=\"large\">\n            <div className=\"map-container\" style={{height: '50%'}}>\n              <Box direction=\"row-responsive\" align=\"center\">\n                <WorldMap color=\"graph-1\" margin=\"small\" align=\"center\"/>\n              </Box>\n            </div>\n            <Box direction=\"row\">\n              <div>\n                <Paragraph>How many times could</Paragraph>\n              </div>\n              <div>\n                <Select\n                  options={locationList}\n                  labelKey=\"name\"\n                  valueKey=\"area\"\n                  value={entry1.length < 1 ? texas : entry1}\n                  size=\"xsmall\"\n                  margin=\"small\"\n                  onSearch={(searchText) => {\n                    const regexp = new RegExp(searchText, 'i');\n                    this.setState({ locationList: locationList.filter(o => o.name.match(regexp)) });\n                  }}\n                  onChange={event => this.setState({\n                    entry1: event.value,\n                    locationList: locationSearchRes,\n                    showResults: false,\n                    decimalBlurb: false\n                  })}\n                />\n              </div>\n              <div>\n                <Paragraph>fit into</Paragraph>\n              </div>\n              <div>\n                <Select\n                  options={locationList}\n                  labelKey=\"name\"\n                  valueKey=\"area\"\n                  value={entry2}\n                  size=\"xsmall\"\n                  margin=\"small\"\n                  onSearch={(searchText) => {\n                    const regexp = new RegExp(searchText, 'i');\n                    this.setState({ locationList: locationList.filter(o => o.name.match(regexp)) });\n                  }}\n                  onChange={ev => this.setState({\n                    entry2: ev.value,\n                    locationList: locationSearchRes,\n                    showResults: false,\n                    decimalBlurb: false\n                  })}\n                />\n              </div>\n              \n              <Paragraph>?</Paragraph>\n              <Button primary margin=\"small\" size=\"small\" label=\"Calculate\" onClick={this.onCalculate} />\n              <Button primary margin=\"small\" size=\"small\" label=\"Custom Entry\" onClick={() => this.setShow(true)} />\n              {showCustomEntry ? \n                <Layer\n                    onEsc={() => this.setShow(false)}\n                    onClickOutside={() => this.setShow(false)}\n                >\n                    <CustomEntryCard> </CustomEntryCard>\n                  </Layer>\n                  : null\n                }\n            </Box>\n            <RadioButtonGroup\n              direction=\"row\"\n              align=\"center\"\n              name=\"doc\"\n              options={['mi', 'km']}\n              value={radioVal}\n              onChange={(event) => this.setRadioValue(event.target.defaultValue)}\n            />\n            \n              { showResults ? \n                //<Heading background=\"neutral\"> {entry1.name} could fit into {entry2.name} {Math.floor(result)} times!</Heading>\n                <ResultsCard entry1={entry1} entry2={entry2} result={result} decimalBlurb={decimalBlurb}></ResultsCard>\n              : null }\n              {/* {decimalBlurb ? <Heading>({Math.round((result) * 100) /100} times to be exact.)</Heading> : null} */}\n            \n          </Main>\n        </div>\n      </Grommet>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}