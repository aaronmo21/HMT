{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Anchor, Nav, Button, Grommet, Header, Box, Markdown, Main, Heading, Paragraph, Select, Layer } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport CustomEntryCard from './CustomEntryCard';\nimport { MapContainer, GeoJSON } from \"react-leaflet\";\nimport mapData from \"./mapdata/countries.json\";\nimport \"leaflet/dist/leaflet.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      locationList: [],\n      locationSearchRes: [],\n      entry1: [],\n      entry2: [],\n      setShowResults: false,\n      result: [],\n      showCustomEntry: false,\n      decimalBlurb: false\n    };\n    this.countryStyle = {\n      fillColor: \"purple\",\n      fillOpacity: 1,\n      color: \"black\",\n      weight: 1\n    };\n\n    this.getResponse = async () => {\n      const response = await fetch('http://localhost:5000/locations');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.highlightLocation = event => {\n      event.target.setStyle({\n        color: \"yellow\",\n        fillColor: \"green\"\n      });\n    };\n\n    this.showLocationMarker = event => {//console.log(locationName);\n    };\n\n    this.onEachLocation = (location, layer) => {\n      const locationName = location.properties.ADMIN;\n      console.log(location.properties.ADMIN);\n      layer.bindPopup(locationName);\n      layer.on({\n        mouseover: this.onLocationMouseOver,\n        click: this.onLocationClick\n      });\n    };\n\n    this.onCalculate = () => {\n      if (this.state.entry1.area && this.state.entry2.area) {\n        var temp = this.state.entry2.area / this.state.entry1.area;\n\n        if (temp % 1 !== 0) {\n          this.setState({\n            decimalBlurb: true\n          });\n        }\n      }\n\n      this.setState({\n        result: temp,\n        locationList: this.state.locationSearchRes,\n        showResults: true\n      });\n    };\n\n    this.setShow = x => {\n      this.setState({\n        showCustomEntry: x\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getResponse().then(res => {\n      this.setState({\n        locationList: res,\n        locationSearchRes: res\n      });\n    });\n  }\n\n  render() {\n    const {\n      locationList,\n      locationSearchRes,\n      entry1,\n      entry2,\n      result,\n      showCustomEntry,\n      showResults,\n      decimalBlurb\n    } = this.state;\n    const texas = locationList.find(o => o.name === 'Texas');\n    console.log(texas);\n    return /*#__PURE__*/_jsxDEV(Grommet, {\n      theme: grommet,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: \"App-header\",\n          pad: \"small\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Anchor, {\n              label: \"Home\",\n              href: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Anchor, {\n              label: \"Countries\",\n              href: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n            children: \"this is using the mercator projection.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Markdown, {\n              alignSelf: \"center\",\n              children: \"how many texases?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          pad: \"large\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              style: {\n                height: '30%'\n              },\n              children: /*#__PURE__*/_jsxDEV(MapContainer, {\n                style: {\n                  height: \"60vh\"\n                },\n                zoom: 5,\n                minZoom: 2,\n                center: [31, -100],\n                children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n                  style: this.countryStyle,\n                  data: mapData.features,\n                  onEachFeature: this.onEachLocation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Heading, {\n              children: \"Have you ever wondered...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Paragraph, {\n                children: \"How many times could\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: locationList,\n                labelKey: \"name\",\n                valueKey: \"area\",\n                value: entry1.length < 1 ? texas : entry1,\n                size: \"xsmall\",\n                margin: \"small\",\n                onSearch: searchText => {\n                  const regexp = new RegExp(searchText, 'i');\n                  this.setState({\n                    locationList: locationList.filter(o => o.name.match(regexp))\n                  });\n                },\n                onChange: event => this.setState({\n                  entry1: event.value,\n                  locationList: locationSearchRes,\n                  showResults: false,\n                  decimalBlurb: false\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Paragraph, {\n                children: \"fit into\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                options: locationList,\n                labelKey: \"name\",\n                valueKey: \"area\",\n                value: entry2,\n                size: \"xsmall\",\n                margin: \"small\",\n                onSearch: searchText => {\n                  const regexp = new RegExp(searchText, 'i');\n                  this.setState({\n                    locationList: locationList.filter(o => o.name.match(regexp))\n                  });\n                },\n                onChange: ev => this.setState({\n                  entry2: ev.value,\n                  locationList: locationSearchRes,\n                  showResults: false,\n                  decimalBlurb: false\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              margin: \"small\",\n              size: \"small\",\n              label: \"Calculate\",\n              onClick: this.onCalculate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              margin: \"small\",\n              size: \"small\",\n              label: \"Custom Entry\",\n              onClick: () => this.setShow(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), showCustomEntry ? /*#__PURE__*/_jsxDEV(Layer, {\n              onEsc: () => this.setShow(false),\n              onClickOutside: () => this.setShow(false),\n              children: /*#__PURE__*/_jsxDEV(CustomEntryCard, {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [showResults ? /*#__PURE__*/_jsxDEV(Heading, {\n              background: \"neutral\",\n              children: [\" \", entry1.name, \" could fit into \", entry2.name, \" \", Math.floor(result), \" times!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this) : null, decimalBlurb ? /*#__PURE__*/_jsxDEV(Heading, {\n              children: [\"(\", Math.round(result * 100) / 100, \" times to be exact.)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 31\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/App.js"],"names":["React","Component","Anchor","Nav","Button","Grommet","Header","Box","Markdown","Main","Heading","Paragraph","Select","Layer","grommet","CustomEntryCard","MapContainer","GeoJSON","mapData","App","state","locationList","locationSearchRes","entry1","entry2","setShowResults","result","showCustomEntry","decimalBlurb","countryStyle","fillColor","fillOpacity","color","weight","getResponse","response","fetch","body","json","status","Error","message","highlightLocation","event","target","setStyle","showLocationMarker","onEachLocation","location","layer","locationName","properties","ADMIN","console","log","bindPopup","on","mouseover","onLocationMouseOver","click","onLocationClick","onCalculate","area","temp","setState","showResults","setShow","x","componentDidMount","then","res","render","texas","find","o","name","height","features","length","searchText","regexp","RegExp","filter","match","value","ev","Math","floor","round"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nimport { Anchor, Nav, Button, Grommet, Header, Box, Markdown, Main, Heading, Paragraph, Select, Layer } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport CustomEntryCard from './CustomEntryCard';\nimport { MapContainer, GeoJSON } from \"react-leaflet\";\nimport mapData from \"./mapdata/countries.json\";\nimport \"leaflet/dist/leaflet.css\"\n\n\n\nclass App extends Component {\n  state = {\n    locationList: [],\n    locationSearchRes: [],\n    entry1: [],\n    entry2: [],\n    setShowResults: false,\n    result: [],\n    showCustomEntry: false,\n    decimalBlurb: false\n  }\n\n  countryStyle = {\n    fillColor: \"purple\",\n    fillOpacity: 1,\n    color: \"black\",\n    weight: 1\n  };\n\n  getResponse = async() => {\n    const response = await fetch('http://localhost:5000/locations');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  }\n\n  highlightLocation = (event) => {\n    event.target.setStyle({\n      color: \"yellow\",\n      fillColor: \"green\"\n    })\n    \n  }\n\n  showLocationMarker = (event) => {\n    //console.log(locationName);\n  }\n\n  onEachLocation = (location, layer) => {\n    const locationName = location.properties.ADMIN\n    console.log(location.properties.ADMIN);\n    layer.bindPopup(locationName);\n\n    layer.on({\n      mouseover: this.onLocationMouseOver,\n      click: this.onLocationClick\n    })\n  }\n\n  onCalculate = () => {\n    if(this.state.entry1.area && this.state.entry2.area){\n      var temp = this.state.entry2.area / this.state.entry1.area;\n      if(temp % 1 !== 0){\n        this.setState({decimalBlurb: true});\n      }      \n    }\n    this.setState({ result: temp,\n      locationList: this.state.locationSearchRes,\n      showResults: true });\n  }\n\n  setShow = (x) => {\n    this.setState({showCustomEntry: x})\n  }\n\n  componentDidMount() {\n    this.getResponse()\n      .then(res => {\n        this.setState({ \n        locationList: res,\n        locationSearchRes: res\n        });\n      })\n  }\n\n  render() {\n    const {locationList, locationSearchRes, entry1, entry2, result, showCustomEntry, showResults, decimalBlurb} = this.state;\n    const texas = locationList.find(o => o.name === 'Texas');\n    console.log(texas)\n    return (\n      <Grommet theme={grommet}>\n        <div className=\"App\">\n          <Header className=\"App-header\" pad=\"small\" align=\"center\">\n            <Nav direction=\"row\">\n              <Anchor label=\"Home\" href=\"#\" />\n              <Anchor label=\"Countries\" href=\"#\" />\n            </Nav>\n            <Paragraph>this is using the mercator projection.</Paragraph>\n            <Box align=\"center\">\n              <Markdown alignSelf=\"center\">how many texases?</Markdown>\n            </Box>\n          </Header>\n          \n          <Main pad=\"large\">\n            <Box>\n            <div className=\"map-container\" style={{height: '30%'}}>\n                <MapContainer style={{ height: \"60vh\" }} zoom={5} minZoom={2} center={[31, -100]} >\n                  <GeoJSON\n                    style={this.countryStyle}\n                    data={mapData.features}\n                    onEachFeature={this.onEachLocation}\n                  />\n                </MapContainer>\n            </div>\n            </Box>\n            <Box>\n              <Heading>Have you ever wondered...</Heading>\n            </Box>\n            <Box direction=\"row\">\n              <div>\n                <Paragraph>How many times could</Paragraph>\n              </div>\n              <div>\n                <Select\n                  options={locationList}\n                  labelKey=\"name\"\n                  valueKey=\"area\"\n                  value={entry1.length < 1 ? texas : entry1}\n                  size=\"xsmall\"\n                  margin=\"small\"\n                  onSearch={(searchText) => {\n                    const regexp = new RegExp(searchText, 'i');\n                    this.setState({ locationList: locationList.filter(o => o.name.match(regexp)) });\n                  }}\n                  onChange={event => this.setState({\n                    entry1: event.value,\n                    locationList: locationSearchRes,\n                    showResults: false,\n                    decimalBlurb: false\n                  })}\n                />\n              </div>\n              <div>\n                <Paragraph>fit into</Paragraph>\n              </div>\n              <div>\n                <Select\n                  options={locationList}\n                  labelKey=\"name\"\n                  valueKey=\"area\"\n                  value={entry2}\n                  size=\"xsmall\"\n                  margin=\"small\"\n                  onSearch={(searchText) => {\n                    const regexp = new RegExp(searchText, 'i');\n                    this.setState({ locationList: locationList.filter(o => o.name.match(regexp)) });\n                  }}\n                  onChange={ev => this.setState({\n                    entry2: ev.value,\n                    locationList: locationSearchRes,\n                    showResults: false,\n                    decimalBlurb: false\n                  })}\n                />\n              </div>\n              \n              <Paragraph>?</Paragraph>\n              <Button primary margin=\"small\" size=\"small\" label=\"Calculate\" onClick={this.onCalculate} />\n              <Button primary margin=\"small\" size=\"small\" label=\"Custom Entry\" onClick={() => this.setShow(true)} />\n              {showCustomEntry ? \n                <Layer\n                    onEsc={() => this.setShow(false)}\n                    onClickOutside={() => this.setShow(false)}\n                >\n                    <CustomEntryCard> </CustomEntryCard>\n                  </Layer>\n                  : null\n                }\n            </Box>\n            <Box>\n              { showResults ? \n                <Heading background=\"neutral\"> {entry1.name} could fit into {entry2.name} {Math.floor(result)} times!</Heading>\n              : null }\n              {decimalBlurb ? <Heading>({Math.round((result) * 100) /100} times to be exact.)</Heading> : null}\n            </Box>\n          </Main>\n        </div>\n      </Grommet>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}