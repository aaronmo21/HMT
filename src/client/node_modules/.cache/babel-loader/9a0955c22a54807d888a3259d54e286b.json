{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/Legend2.js\";\nimport { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { RadioButtonGroup } from 'grommet';\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    //const{value} = this.state;  \n    const legend = L.control({\n      position: \"bottomright\"\n    });\n    const {\n      map\n    } = this.props.leaflet;\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      let labels = []; // for (let i = 0; i < grades.length; i++) {\n      //   from = grades[i];\n      //   to = grades[i + 1];\n      //   labels.push(\n      //     '<i style=\"background:' +\n      //       getColor(from + 1) +\n      //       '\"></i> ' +\n      //       from +\n      //       (to ? \"&ndash;\" + to : \"+\")\n      //   );\n      // }\n      //   labels.push(\n      //     '<button>button1</button><button>button1</button>'\n      //   );\n      //   div.innerHTML = labels.join(\"<br>\");\n      //return div;\n\n      return /*#__PURE__*/_jsxDEV(RadioButtonGroup, {\n        name: \"doc\",\n        options: [1, 2] //value={value}\n        ,\n        onChange: event => this.props.radioLocation(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    };\n\n    legend.addTo(map);\n  } //   render(){\n  //     //const{value} = this.state;\n  //       return(\n  //         <RadioButtonGroup\n  //             name=\"doc\"\n  //             options={[1, 2]}\n  //             //value={value}\n  //             onChange={(event) => this.props.radioLocation(event.target.value)}\n  //         />\n  //       )\n  //   }\n\n\n}\n\nexport default _c = withLeaflet(Legend);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/Legend2.js"],"names":["MapControl","withLeaflet","L","RadioButtonGroup","Legend","createLeafletElement","props","componentDidMount","legend","control","position","map","leaflet","onAdd","div","DomUtil","create","labels","event","radioLocation","target","value","addTo"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,gBAAT,QAAiC,SAAjC;;AAEA,MAAMC,MAAN,SAAqBJ,UAArB,CAAgC;AAC9BK,EAAAA,oBAAoB,CAACC,KAAD,EAAQ,CAC3B;;AAGDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,MAAM,GAAGN,CAAC,CAACO,OAAF,CAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAf;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAU,KAAKL,KAAL,CAAWM,OAA3B;;AACAJ,IAAAA,MAAM,CAACK,KAAP,GAAe,MAAM;AACnB,YAAMC,GAAG,GAAGZ,CAAC,CAACa,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,aAAxB,CAAZ;AACA,UAAIC,MAAM,GAAG,EAAb,CAFmB,CAInB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACA;AACA;AAEA;AACE;;AACA,0BACE,QAAC,gBAAD;AACI,QAAA,IAAI,EAAC,KADT;AAEI,QAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFb,CAGI;AAHJ;AAII,QAAA,QAAQ,EAAGC,KAAD,IAAW,KAAKZ,KAAL,CAAWa,aAAX,CAAyBD,KAAK,CAACE,MAAN,CAAaC,KAAtC;AAJzB;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KA9BD;;AA+BAb,IAAAA,MAAM,CAACc,KAAP,CAAaX,GAAb;AACD,GAzC6B,CA6ChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvDgC;;AA6DhC,oBAAeV,WAAW,CAACG,MAAD,CAA1B","sourcesContent":["import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { RadioButtonGroup } from 'grommet';\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {\n  }\n\n\n  componentDidMount() {  \n    //const{value} = this.state;  \n    const legend = L.control({ position: \"bottomright\" });\n    const { map } = this.props.leaflet;\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      let labels = [];\n\n      // for (let i = 0; i < grades.length; i++) {\n      //   from = grades[i];\n      //   to = grades[i + 1];\n\n      //   labels.push(\n      //     '<i style=\"background:' +\n      //       getColor(from + 1) +\n      //       '\"></i> ' +\n      //       from +\n      //       (to ? \"&ndash;\" + to : \"+\")\n      //   );\n      // }\n    //   labels.push(\n    //     '<button>button1</button><button>button1</button>'\n    //   );\n\n    //   div.innerHTML = labels.join(\"<br>\");\n      //return div;\n      return(\n        <RadioButtonGroup\n            name=\"doc\"\n            options={[1, 2]}\n            //value={value}\n            onChange={(event) => this.props.radioLocation(event.target.value)}\n        />\n      )\n    };\n    legend.addTo(map);\n  }\n\n  \n\n//   render(){\n//     //const{value} = this.state;\n//       return(\n//         <RadioButtonGroup\n//             name=\"doc\"\n//             options={[1, 2]}\n//             //value={value}\n//             onChange={(event) => this.props.radioLocation(event.target.value)}\n//         />\n//       )\n//   }\n\n\n\n}\n\nexport default withLeaflet(Legend);\n"]},"metadata":{},"sourceType":"module"}