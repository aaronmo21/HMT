{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Anchor, Nav, Button, Grommet, Header, Box, Markdown, Main, Heading, Paragraph, Select, Layer } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport CustomEntryCard from './CustomEntryCard';\nimport { Map, GeoJSON } from \"react-leaflet\";\nimport mapData from \"./mapdata/countries.json\";\nimport \"leaflet/dist/leaflet.css\";\nimport ResultsCard from './ResultsCard';\nimport Legend from './Legend';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.countryStyle = {\n      fillColor: \"#7D4CDB\",\n      fillOpacity: 1,\n      color: \"black\",\n      weight: 1\n    };\n\n    this.getResponse = async () => {\n      const response = await fetch('http://localhost:5000/locations');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.selectLocation = event => {\n      if (this.state.numOfSelections < 1) {}\n\n      event.target.setStyle({\n        color: \"#66ff00\",\n        fillColor: \"#6FFFB0\"\n      });\n      console.log(this.state.locationList);\n      let mapClickedlocation1 = this.state.locationList.find(o => o.name === event.target.feature.properties.ADMIN);\n      this.setState({\n        entry1: mapClickedlocation1\n      });\n    };\n\n    this.onEachLocation = (location, layer) => {\n      const locationName = location.properties.ADMIN; //console.log(location.properties.ADMIN);\n\n      layer.bindPopup(locationName);\n      layer.on({\n        mouseover: event => {\n          layer.bindPopup(event.target.feature.properties.ADMIN);\n        },\n        click: this.selectLocation\n      });\n    };\n\n    this.onCalculate = () => {\n      if (this.state.entry1.area && this.state.entry2.area) {\n        var temp = this.state.entry2.area / this.state.entry1.area;\n\n        if (temp % 1 !== 0) {\n          this.setState({\n            decimalBlurb: true\n          });\n        }\n      }\n\n      this.setState({\n        result: temp,\n        locationList: this.state.locationSearchRes,\n        showResults: true\n      });\n    };\n\n    this.setShow = x => {\n      this.setState({\n        showCustomEntry: x,\n        showResults: x\n      });\n    };\n\n    this.selectLocation = this.selectLocation.bind(this);\n    this.state = {\n      locationList: [],\n      locationSearchRes: [],\n      entry1: [],\n      entry2: [],\n      result: [],\n      showCustomEntry: false,\n      decimalBlurb: false,\n      numOfSelections: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getResponse().then(res => {\n      this.setState({\n        locationList: res,\n        locationSearchRes: res\n      });\n    });\n  }\n\n  render() {\n    const {\n      locationList,\n      locationSearchRes,\n      entry1,\n      entry2,\n      result,\n      showCustomEntry,\n      showResults,\n      decimalBlurb\n    } = this.state;\n    const texas = locationList.find(o => o.name === 'Texas');\n    console.log(texas);\n    return /*#__PURE__*/_jsxDEV(Grommet, {\n      theme: grommet,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: \"App-header\",\n          pad: \"small\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Anchor, {\n              label: \"Home\",\n              href: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Anchor, {\n              label: \"Countries\",\n              href: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n            children: \"this is using the mercator projection.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Markdown, {\n              align: \"center\",\n              children: \"how many texases?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          pad: \"large\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              style: {\n                height: '30%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Map, {\n                className: \"bottom-layer\",\n                style: {\n                  height: \"60vh\"\n                },\n                zoom: 5,\n                minZoom: 2,\n                center: [31, -100],\n                children: [/*#__PURE__*/_jsxDEV(GeoJSON, {\n                  style: this.countryStyle,\n                  data: mapData.features,\n                  onEachFeature: this.onEachLocation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Heading, {\n              children: \"have u ever wondered...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Paragraph, {\n                children: \"...how many times could\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                className: \"top-menu\",\n                options: locationList,\n                labelKey: \"name\",\n                valueKey: \"area\",\n                value: entry1 //.length < 1 ? texas : entry1}\n                ,\n                size: \"xsmall\",\n                margin: \"small\",\n                onSearch: searchText => {\n                  const regexp = new RegExp(searchText, 'i');\n                  this.setState({\n                    locationList: locationList.filter(o => o.name.match(regexp))\n                  });\n                },\n                onChange: event => this.setState({\n                  entry1: event.value,\n                  locationList: locationSearchRes,\n                  showResults: false,\n                  decimalBlurb: false\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Paragraph, {\n                children: \"fit into\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                className: \"top-menu\",\n                options: locationList,\n                labelKey: \"name\",\n                valueKey: \"area\",\n                value: entry2,\n                size: \"xsmall\",\n                margin: \"small\",\n                onSearch: searchText => {\n                  const regexp = new RegExp(searchText, 'i');\n                  this.setState({\n                    locationList: locationList.filter(o => o.name.match(regexp))\n                  });\n                },\n                onChange: ev => this.setState({\n                  entry2: ev.value,\n                  locationList: locationSearchRes,\n                  showResults: false,\n                  decimalBlurb: false\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              margin: \"small\",\n              size: \"small\",\n              label: \"Calculate\",\n              onClick: this.onCalculate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              primary: true,\n              margin: \"small\",\n              size: \"small\",\n              label: \"Custom Entry\",\n              onClick: () => this.setShow(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), showCustomEntry ? /*#__PURE__*/_jsxDEV(Layer, {\n              onEsc: () => this.setShow(false),\n              onClickOutside: () => this.setShow(false),\n              children: /*#__PURE__*/_jsxDEV(CustomEntryCard, {\n                children: \" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: showResults ? /*#__PURE__*/_jsxDEV(Layer, {\n              onEsc: () => this.setShow(false),\n              onClickOutside: () => this.setShow(false),\n              children: /*#__PURE__*/_jsxDEV(ResultsCard, {\n                entry1: entry1,\n                entry2: entry2,\n                result: result,\n                decimalBlurb: decimalBlurb\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/App.js"],"names":["React","Component","Anchor","Nav","Button","Grommet","Header","Box","Markdown","Main","Heading","Paragraph","Select","Layer","grommet","CustomEntryCard","Map","GeoJSON","mapData","ResultsCard","Legend","App","constructor","props","countryStyle","fillColor","fillOpacity","color","weight","getResponse","response","fetch","body","json","status","Error","message","selectLocation","event","state","numOfSelections","target","setStyle","console","log","locationList","mapClickedlocation1","find","o","name","feature","properties","ADMIN","setState","entry1","onEachLocation","location","layer","locationName","bindPopup","on","mouseover","click","onCalculate","area","entry2","temp","decimalBlurb","result","locationSearchRes","showResults","setShow","x","showCustomEntry","bind","componentDidMount","then","res","render","texas","height","features","searchText","regexp","RegExp","filter","match","value","ev"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport { Anchor, Nav, Button, Grommet, Header, Box, Markdown, Main, Heading, Paragraph, Select, Layer } from 'grommet';\nimport { grommet } from 'grommet/themes';\nimport CustomEntryCard from './CustomEntryCard';\nimport { Map, GeoJSON } from \"react-leaflet\";\nimport mapData from \"./mapdata/countries.json\";\nimport \"leaflet/dist/leaflet.css\"\nimport ResultsCard from './ResultsCard';\nimport Legend from './Legend'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.selectLocation = this.selectLocation.bind(this);\n    this.state = {\n      locationList: [],\n      locationSearchRes: [],\n      entry1: [],\n      entry2: [],\n      result: [],\n      showCustomEntry: false,\n      decimalBlurb: false,\n      numOfSelections: 0,\n    }\n  }\n  \n\n  countryStyle = {\n    fillColor: \"#7D4CDB\",\n    fillOpacity: 1,\n    color: \"black\",\n    weight: 1\n  };\n\n  //require 2 selections lmao wtf\n\n  //lastClicked variable when nextClicked = lastClicked undo selection\n  //when nextClicked != lastClicked \n\n  //states: 0 to firstSelection, firstSelection to secondSelection, secondSelection to ready\n\n\n\n  getResponse = async() => {\n    const response = await fetch('http://localhost:5000/locations');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  }\n\n  selectLocation = (event) => {\n    if(this.state.numOfSelections < 1){\n\n    }\n    event.target.setStyle({\n      color: \"#66ff00\",\n      fillColor: \"#6FFFB0\"\n    })\n    console.log(this.state.locationList);\n    let mapClickedlocation1 = this.state.locationList.find(o => o.name === event.target.feature.properties.ADMIN);\n    this.setState({entry1: mapClickedlocation1})\n  }\n\n  onEachLocation = (location, layer) => {\n    const locationName = location.properties.ADMIN;\n    //console.log(location.properties.ADMIN);\n    layer.bindPopup(locationName);\n\n    layer.on({\n      mouseover: (event) => {\n        layer.bindPopup(event.target.feature.properties.ADMIN);\n      },\n      click: this.selectLocation\n    })\n  }\n\n  onCalculate = () => {\n    if(this.state.entry1.area && this.state.entry2.area){\n      var temp = this.state.entry2.area / this.state.entry1.area;\n      if(temp % 1 !== 0){\n        this.setState({decimalBlurb: true});\n      }      \n    }\n    this.setState({ result: temp,\n      locationList: this.state.locationSearchRes,\n      showResults: true });\n  }\n\n  setShow = (x) => {\n    this.setState({showCustomEntry: x, showResults: x})\n  }\n\n  componentDidMount() {\n    this.getResponse()\n      .then(res => {\n        this.setState({ \n        locationList: res,\n        locationSearchRes: res\n        });\n      })\n  }\n\n  render() {\n    const {locationList, locationSearchRes, entry1, entry2, result, showCustomEntry, showResults, decimalBlurb} = this.state;\n    const texas = locationList.find(o => o.name === 'Texas');\n    console.log(texas)\n    return (\n      <Grommet theme={grommet}>\n        <div className=\"App\">\n          <Header className=\"App-header\" pad=\"small\" align=\"center\">\n            <Nav direction=\"row\">\n              <Anchor label=\"Home\" href=\"#\" />\n              <Anchor label=\"Countries\" href=\"#\" />\n            </Nav>\n            <Paragraph>this is using the mercator projection.</Paragraph>\n            <Box align=\"center\">\n              <Markdown align=\"center\">how many texases?</Markdown>\n            </Box>\n          </Header>\n          \n          <Main pad=\"large\">\n            <Box>\n            <div className=\"map-container\" style={{height: '30%'}}>\n                <Map className=\"bottom-layer\" style={{ height: \"60vh\" }} zoom={5} minZoom={2} center={[31, -100]} >\n                  <GeoJSON\n                    style={this.countryStyle}\n                    data={mapData.features}\n                    onEachFeature={this.onEachLocation}\n                  />\n                  <Legend />\n                </Map>\n            </div>\n            </Box>\n            <Box>\n              <Heading>have u ever wondered...</Heading>\n            </Box>\n            <Box direction=\"row\">\n              <div>\n                <Paragraph>...how many times could</Paragraph>\n              </div>\n              <div>\n                <Select\n                  className=\"top-menu\"\n                  options={locationList}\n                  labelKey=\"name\"\n                  valueKey=\"area\"\n                  value={entry1} //.length < 1 ? texas : entry1}\n                  size=\"xsmall\"\n                  margin=\"small\"\n                  onSearch={(searchText) => {\n                    const regexp = new RegExp(searchText, 'i');\n                    this.setState({ locationList: locationList.filter(o => o.name.match(regexp)) });\n                  }}\n                  onChange={event => this.setState({\n                    entry1: event.value,\n                    locationList: locationSearchRes,\n                    showResults: false,\n                    decimalBlurb: false\n                  })}\n                />\n              </div>\n              <div>\n                <Paragraph>fit into</Paragraph>\n              </div>\n              <div>\n                <Select\n                  className=\"top-menu\"\n                  options={locationList}\n                  labelKey=\"name\"\n                  valueKey=\"area\"\n                  value={entry2}\n                  size=\"xsmall\"\n                  margin=\"small\"\n                  onSearch={(searchText) => {\n                    const regexp = new RegExp(searchText, 'i');\n                    this.setState({ locationList: locationList.filter(o => o.name.match(regexp)) });\n                  }}\n                  onChange={ev => this.setState({\n                    entry2: ev.value,\n                    locationList: locationSearchRes,\n                    showResults: false,\n                    decimalBlurb: false\n                  })}\n                />\n              </div>\n              <Paragraph>?</Paragraph>\n              <Button primary margin=\"small\" size=\"small\" label=\"Calculate\" onClick={this.onCalculate} />\n              <Button primary margin=\"small\" size=\"small\" label=\"Custom Entry\" onClick={() => this.setShow(true)} />\n              {showCustomEntry ? \n                <Layer\n                    onEsc={() => this.setShow(false)}\n                    onClickOutside={() => this.setShow(false)}\n                >\n                    <CustomEntryCard> </CustomEntryCard>\n                  </Layer>\n                  : null\n                }\n            </Box>\n            <Box>\n              { showResults ?\n              <Layer\n                onEsc={() => this.setShow(false)}\n                onClickOutside={() => this.setShow(false)}\n              >\n                <ResultsCard entry1={entry1} entry2={entry2} result={result} decimalBlurb={decimalBlurb} />\n              </Layer>\n              : null }\n            </Box>\n          </Main>\n        </div>\n      </Grommet>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}