{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/ResultsCard.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardFooter, CardHeader, Button, Form, FormField, TextInput, Box, Select, Heading } from 'grommet';\n\nclass ResultsCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onCalculate = () => {\n      if (this.state.entry1.area && this.state.entry2.area) {\n        var temp = this.state.entry2.area / this.state.entry1.area;\n\n        if (temp % 1 !== 0) {\n          this.setState({\n            decimalBlurb: true\n          });\n        }\n      }\n\n      this.setState({\n        result: temp,\n        locationList: this.state.locationSearchRes,\n        showResults: true\n      });\n    };\n\n    this.onCalculate = this.onCalculate.bind(this);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        height: \"medium\",\n        align: \"center\",\n        width: \"large\",\n        background: \"light-1\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          background: \"light-3\",\n          pad: \"medium\",\n          children: \"Custom Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          pad: \"medium\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              background: \"neutral\",\n              children: [\" \", this.props.entry1.name, \" could fit into \", this.props.entry2.name, \" \", Math.floor(this.props.result), \" times!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this), this.props.decimalBlurb ? /*#__PURE__*/_jsxDEV(Heading, {\n              children: [\"(\", Math.round(this.props.result * 100) / 100, \" times to be exact.)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 52\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          pad: {\n            horizontal: \"small\"\n          },\n          background: \"light-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ResultsCard;","map":{"version":3,"sources":["/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/ResultsCard.js"],"names":["React","Component","Card","CardBody","CardFooter","CardHeader","Button","Form","FormField","TextInput","Box","Select","Heading","ResultsCard","constructor","props","onCalculate","state","entry1","area","entry2","temp","setState","decimalBlurb","result","locationList","locationSearchRes","showResults","bind","render","name","Math","floor","round","horizontal"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,MAAjD,EAAyDC,IAAzD,EAA+DC,SAA/D,EAA0EC,SAA1E,EAAqFC,GAArF,EAA0FC,MAA1F,EAAkGC,OAAlG,QAAiH,SAAjH;;AAGA,MAAMC,WAAN,SAA0BZ,SAA1B,CAAoC;AAChCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,WARmB,GAQL,MAAM;AAChB,UAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,IAA0B,KAAKF,KAAL,CAAWG,MAAX,CAAkBD,IAA/C,EAAoD;AAClD,YAAIE,IAAI,GAAG,KAAKJ,KAAL,CAAWG,MAAX,CAAkBD,IAAlB,GAAyB,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,IAAtD;;AACA,YAAGE,IAAI,GAAG,CAAP,KAAa,CAAhB,EAAkB;AAChB,eAAKC,QAAL,CAAc;AAACC,YAAAA,YAAY,EAAE;AAAf,WAAd;AACD;AACF;;AACD,WAAKD,QAAL,CAAc;AAAEE,QAAAA,MAAM,EAAEH,IAAV;AACdI,QAAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,iBADX;AAEdC,QAAAA,WAAW,EAAE;AAFC,OAAd;AAGH,KAlBkB;;AAEf,SAAKX,WAAL,GAAmB,KAAKA,WAAL,CAAiBY,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKX,KAAL,GAAa,EAAb;AAGH;;AAcDY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,IAAD;AAAO,QAAA,MAAM,EAAC,QAAd;AAAuB,QAAA,KAAK,EAAC,QAA7B;AAAsC,QAAA,KAAK,EAAC,OAA5C;AAAoD,QAAA,UAAU,EAAC,SAA/D;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,UAAU,EAAC,SAAvB;AAAiC,UAAA,GAAG,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAU,UAAA,GAAG,EAAC,QAAd;AAAA,iCACA,QAAC,GAAD;AAAA,oCACI,QAAC,OAAD;AAAS,cAAA,UAAU,EAAC,SAApB;AAAA,8BAAgC,KAAKd,KAAL,CAAWG,MAAX,CAAkBY,IAAlD,sBAAwE,KAAKf,KAAL,CAAWK,MAAX,CAAkBU,IAA1F,OAAiGC,IAAI,CAACC,KAAL,CAAW,KAAKjB,KAAL,CAAWS,MAAtB,CAAjG;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEK,KAAKT,KAAL,CAAWQ,YAAX,gBAA0B,QAAC,OAAD;AAAA,8BAAWQ,IAAI,CAACE,KAAL,CAAY,KAAKlB,KAAL,CAAWS,MAAZ,GAAsB,GAAjC,IAAuC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA1B,GAAiH,IAFtH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI,QAAC,UAAD;AAAY,UAAA,GAAG,EAAE;AAACU,YAAAA,UAAU,EAAE;AAAb,WAAjB;AAAwC,UAAA,UAAU,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAtC+B;;AAyCpC,eAAerB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardBody, CardFooter, CardHeader, Button, Form, FormField, TextInput, Box, Select, Heading } from 'grommet';\n\n\nclass ResultsCard extends Component {\n    constructor(props) {\n        super(props);\n        this.onCalculate = this.onCalculate.bind(this);\n        this.state = {\n            \n        };\n    }\n\n    onCalculate = () => {\n        if(this.state.entry1.area && this.state.entry2.area){\n          var temp = this.state.entry2.area / this.state.entry1.area;\n          if(temp % 1 !== 0){\n            this.setState({decimalBlurb: true});\n          }      \n        }\n        this.setState({ result: temp,\n        locationList: this.state.locationSearchRes,\n        showResults: true });\n    }\n    \n    render() {\n        return (\n            <div>\n                <Card  height=\"medium\" align=\"center\" width=\"large\" background=\"light-1\">\n                    <CardHeader background=\"light-3\" pad=\"medium\">Custom Entry</CardHeader>\n                    <CardBody pad=\"medium\">\n                    <Box>\n                        <Heading background=\"neutral\"> {this.props.entry1.name} could fit into {this.props.entry2.name} {Math.floor(this.props.result)} times!</Heading>\n                        {this.props.decimalBlurb ? <Heading>({Math.round((this.props.result) * 100) /100} times to be exact.)</Heading> : null}\n                    </Box>\n                    </CardBody>\n                    <CardFooter pad={{horizontal: \"small\"}} background=\"light-2\">   \n                    </CardFooter>\n                </Card>\n\n            </div>\n        );\n    }\n}\n\nexport default ResultsCard;"]},"metadata":{},"sourceType":"module"}