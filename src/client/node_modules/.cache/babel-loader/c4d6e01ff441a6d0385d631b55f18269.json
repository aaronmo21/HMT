{"ast":null,"code":"import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    // get color depending on population density value\n    const getColor = d => {\n      return d > 1000 ? \"#800026\" : d > 500 ? \"#BD0026\" : d > 200 ? \"#E31A1C\" : d > 100 ? \"#FC4E2A\" : d > 50 ? \"#FD8D3C\" : d > 20 ? \"#FEB24C\" : d > 10 ? \"#FED976\" : \"#FFEDA0\";\n    };\n\n    const legend = L.control({\n      position: \"bottomright\"\n    });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      let labels = []; // for (let i = 0; i < grades.length; i++) {\n      //   from = grades[i];\n      //   to = grades[i + 1];\n      //   labels.push(\n      //     '<i style=\"background:' +\n      //       getColor(from + 1) +\n      //       '\"></i> ' +\n      //       from +\n      //       (to ? \"&ndash;\" + to : \"+\")\n      //   );\n      // }\n\n      labels.push('<button>button1</button>');\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const {\n      map\n    } = this.props.leaflet;\n    legend.addTo(map);\n  }\n\n}\n\nexport default _c = withLeaflet(Legend);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/aaron2/Documents/sourcetree/sample-app/src/client/src/Legend.js"],"names":["MapControl","withLeaflet","L","Legend","createLeafletElement","props","componentDidMount","getColor","d","legend","control","position","onAdd","div","DomUtil","create","labels","push","innerHTML","join","map","leaflet","addTo"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,CAAP,MAAc,SAAd;;AAEA,MAAMC,MAAN,SAAqBH,UAArB,CAAgC;AAC9BI,EAAAA,oBAAoB,CAACC,KAAD,EAAQ,CAAE;;AAE9BC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,aAAOA,CAAC,GAAG,IAAJ,GACH,SADG,GAEHA,CAAC,GAAG,GAAJ,GACA,SADA,GAEAA,CAAC,GAAG,GAAJ,GACA,SADA,GAEAA,CAAC,GAAG,GAAJ,GACA,SADA,GAEAA,CAAC,GAAG,EAAJ,GACA,SADA,GAEAA,CAAC,GAAG,EAAJ,GACA,SADA,GAEAA,CAAC,GAAG,EAAJ,GACA,SADA,GAEA,SAdJ;AAeD,KAhBD;;AAkBA,UAAMC,MAAM,GAAGP,CAAC,CAACQ,OAAF,CAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAf;;AAEAF,IAAAA,MAAM,CAACG,KAAP,GAAe,MAAM;AACnB,YAAMC,GAAG,GAAGX,CAAC,CAACY,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,aAAxB,CAAZ;AACA,UAAIC,MAAM,GAAG,EAAb,CAFmB,CAInB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAAA,MAAM,CAACC,IAAP,CACE,0BADF;AAIAJ,MAAAA,GAAG,CAACK,SAAJ,GAAgBF,MAAM,CAACG,IAAP,CAAY,MAAZ,CAAhB;AACA,aAAON,GAAP;AACD,KAtBD;;AAwBA,UAAM;AAAEO,MAAAA;AAAF,QAAU,KAAKf,KAAL,CAAWgB,OAA3B;AACAZ,IAAAA,MAAM,CAACa,KAAP,CAAaF,GAAb;AACD;;AAnD6B;;AAsDhC,oBAAenB,WAAW,CAACE,MAAD,CAA1B","sourcesContent":["import { MapControl, withLeaflet } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Legend extends MapControl {\n  createLeafletElement(props) {}\n\n  componentDidMount() {\n    // get color depending on population density value\n    const getColor = d => {\n      return d > 1000\n        ? \"#800026\"\n        : d > 500\n        ? \"#BD0026\"\n        : d > 200\n        ? \"#E31A1C\"\n        : d > 100\n        ? \"#FC4E2A\"\n        : d > 50\n        ? \"#FD8D3C\"\n        : d > 20\n        ? \"#FEB24C\"\n        : d > 10\n        ? \"#FED976\"\n        : \"#FFEDA0\";\n    };\n\n    const legend = L.control({ position: \"bottomright\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      let labels = [];\n\n      // for (let i = 0; i < grades.length; i++) {\n      //   from = grades[i];\n      //   to = grades[i + 1];\n\n      //   labels.push(\n      //     '<i style=\"background:' +\n      //       getColor(from + 1) +\n      //       '\"></i> ' +\n      //       from +\n      //       (to ? \"&ndash;\" + to : \"+\")\n      //   );\n      // }\n      labels.push(\n        '<button>button1</button>'\n      );\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    const { map } = this.props.leaflet;\n    legend.addTo(map);\n  }\n}\n\nexport default withLeaflet(Legend);\n"]},"metadata":{},"sourceType":"module"}